(this.webpackJsonp=this.webpackJsonp||[]).push([[17],{"/3A2":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateIssueConfidential"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"IssueSetConfidentialInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetConfidential"},name:{kind:"Name",value:"issueSetConfidential"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidential"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:209}};n.loc.source={body:"mutation updateIssueConfidential($input: IssueSetConfidentialInput!) {\n  issuableSetConfidential: issueSetConfidential(input: $input) {\n    issuable: issue {\n      id\n      confidential\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.updateIssueConfidential=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"updateIssueConfidential")},"0ddK":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicDueDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateIsFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateFromMilestones"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:230}};n.loc.source={body:"query epicDueDate($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    issuable: epic(iid: $iid) {\n      id\n      dueDate\n      dueDateIsFixed\n      dueDateFixed\n      dueDateFromMilestones\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.epicDueDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"epicDueDate")},"0z+q":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicStartDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateIsFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateFromMilestones"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:240}};n.loc.source={body:"query epicStartDate($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    issuable: epic(iid: $iid) {\n      id\n      startDate\n      startDateIsFixed\n      startDateFixed\n      startDateFromMilestones\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.epicStartDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"epicStartDate")},"1XfR":function(e,i,n){var a={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"AlertNote"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Note"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"author"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"Author"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"body"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"bodyHtml"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createdAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discussion"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"systemNoteIconName"},arguments:[],directives:[]}]}}],loc:{start:0,end:196}};a.loc.source={body:'#import "./author.fragment.graphql"\n\nfragment AlertNote on Note {\n  id\n  author {\n    id\n    state\n    ...Author\n  }\n  body\n  bodyHtml\n  createdAt\n  discussion {\n    id\n  }\n  systemNoteIconName\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("TgHV").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.AlertNote=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"AlertNote")},"1e8H":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"mergeRequestSetLabels"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MergeRequestSetLabelsInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"updateIssuableLabels"},name:{kind:"Name",value:"mergeRequestSetLabels"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"labels"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"color"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:310}};n.loc.source={body:"mutation mergeRequestSetLabels($input: MergeRequestSetLabelsInput!) {\n  updateIssuableLabels: mergeRequestSetLabels(input: $input) {\n    errors\n    issuable: mergeRequest {\n      id\n      labels {\n        nodes {\n          color\n          description\n          id\n          title\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.mergeRequestSetLabels=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"mergeRequestSetLabels")},"2x97":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateIssuableConfidential"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEpicInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetConfidential"},name:{kind:"Name",value:"updateEpic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidential"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:191}};n.loc.source={body:"mutation updateIssuableConfidential($input: UpdateEpicInput!) {\n  issuableSetConfidential: updateEpic(input: $input) {\n    issuable: epic {\n      id\n      confidential\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.updateIssuableConfidential=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"updateIssuableConfidential")},"4uVt":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"issuableTodoMarkDone"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"TodoMarkDoneInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"todoMutation"},name:{kind:"Name",value:"todoMarkDone"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"todo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:149}};n.loc.source={body:"mutation issuableTodoMarkDone($input: TodoMarkDoneInput!) {\n  todoMutation: todoMarkDone(input: $input) {\n    todo {\n      id\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issuableTodoMarkDone=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issuableTodoMarkDone")},"5V93":function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"mergeRequestSetAssignees"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"assigneeUsernames"}},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetAssignees"},name:{kind:"Name",value:"mergeRequestSetAssignees"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"assigneeUsernames"},value:{kind:"Variable",name:{kind:"Name",value:"assigneeUsernames"}}},{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]},{kind:"Field",name:{kind:"Name",value:"mergeRequestInteraction"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"canMerge"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:594}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nmutation mergeRequestSetAssignees($iid: String!, $assigneeUsernames: [String!]!, $fullPath: ID!) {\n  issuableSetAssignees: mergeRequestSetAssignees(\n    input: { iid: $iid, assigneeUsernames: $assigneeUsernames, projectPath: $fullPath }\n  ) {\n    issuable: mergeRequest {\n      id\n      assignees {\n        nodes {\n          ...User\n          ...UserAvailability\n          mergeRequestInteraction {\n            canMerge\n          }\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(d(n("yXJ/").definitions)),a.definitions=a.definitions.concat(d(n("ND1Y").definitions));var r={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),r[e.name.value]=i}})),e.exports=a,e.exports.mergeRequestSetAssignees=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=r[i]||new Set,t=new Set,d=new Set;for(a.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"mergeRequestSetAssignees")},"5ee2":function(e,i,n){"use strict";n.d(i,"l",(function(){return mi})),n.d(i,"o",(function(){return ci})),n.d(i,"h",(function(){return fi})),n.d(i,"u",(function(){return vi})),n.d(i,"C",(function(){return ki})),n.d(i,"i",(function(){return pi})),n.d(i,"v",(function(){return Si})),n.d(i,"D",(function(){return gi})),n.d(i,"s",(function(){return Ni})),n.d(i,"k",(function(){return hi})),n.d(i,"j",(function(){return bi})),n.d(i,"x",(function(){return yi})),n.d(i,"g",(function(){return Di})),n.d(i,"y",(function(){return Ei})),n.d(i,"n",(function(){return Ti})),n.d(i,"w",(function(){return Fi})),n.d(i,"z",(function(){return wi})),n.d(i,"t",(function(){return Vi})),n.d(i,"c",(function(){return Ii})),n.d(i,"e",(function(){return Oi})),n.d(i,"d",(function(){return Ai})),n.d(i,"b",(function(){return $i})),n.d(i,"r",(function(){return _i})),n.d(i,"B",(function(){return Ri})),n.d(i,"f",(function(){return xi})),n.d(i,"A",(function(){return ji})),n.d(i,"m",(function(){return Mi})),n.d(i,"q",(function(){return Li})),n.d(i,"p",(function(){return Ui})),n.d(i,"a",(function(){return Ci}));var a=n("qDmM"),t=n.n(a),d=n("t9l/"),r=n("il++"),l=n.n(r),s=n("ayGe"),o=n.n(s),u=n("7WD8"),m=n.n(u),c=n("mpzd"),f=n("PEAp"),v=n.n(f),k=n("0ddK"),p=n.n(k),S=n("tB5k"),g=n.n(S),N=n("wSUX"),h=n.n(N),b=n("0z+q"),y=n.n(b),D=n("Bml2"),E=n.n(D),T=n("eO/Q"),F=n.n(T),w=n("wMWn"),V=n.n(w),q=n("MIX8"),P=n.n(q),I=n("GSV/"),O=n.n(I),A=n("paIi"),$=n.n(A),_=n("Ngt0"),R=n.n(_),x=n("AHEt"),j=n.n(x),M=n("bpen"),L=n.n(M),U=n("Dwpb"),C=n.n(U),G=n("pKR4"),Q=n.n(G),z=n("mawF"),H=n.n(z),B=n("mxyH"),X=n.n(B),J=n("9d0U"),W=n.n(J),Y=n("EPAg"),K=n.n(Y),Z=n("4uVt"),ee=n.n(Z),ie=n("2x97"),ne=n.n(ie),ae=n("sg9S"),te=n.n(ae),de=n("ZMa4"),re=n.n(de),le=n("358B"),se=n.n(le),oe=n("/3A2"),ue=n.n(oe),me=n("NM/P"),ce=n.n(me),fe=n("es8a"),ve=n.n(fe),ke=n("lUSz"),pe=n.n(ke),Se=n("1e8H"),ge=n.n(Se),Ne=n("MHQH"),he=n.n(Ne),be=n("nQ35"),ye=n.n(be),De=n("IuCd"),Ee=n.n(De),Te=n("bc8f"),Fe=n.n(Te),we=n("tSSo"),Ve=n.n(we),qe=n("MPHe"),Pe=n.n(qe),Ie=n("m9sB"),Oe=n.n(Ie),Ae=n("U0nB"),$e=n.n(Ae),_e=n("QVnT"),Re=n.n(_e),xe=n("KGGv"),je=n.n(xe),Me=n("VW3Q"),Le=n.n(Me),Ue=n("QYdl"),Ce=n.n(Ue),Ge=n("sJJu"),Qe=n.n(Ge),ze=n("csG4"),He=n.n(ze),Be=n("V85p"),Xe=n.n(Be),Je=n("RWen"),We=n.n(Je),Ye=n("5V93"),Ke=n.n(Ye),Ze=n("B8Eg"),ei=n.n(Ze),ii=n("rGXj"),ni=n.n(ii),ai=n("AMIN"),ti=n.n(ai),di=n("y9w6"),ri=n.n(di),li=n("adGk"),si=n.n(li),oi=n("iuSE"),ui=n.n(oi);const mi="TITLE_ASC",ci=/^&(?<iid>\d+)$/,fi={[c.c.Issue]:{query:je.a,subscription:V.a,mutation:We.a},[c.c.MergeRequest]:{query:Qe.a,mutation:Ke.a},[c.c.Alert]:{query:Re.a,mutation:ye.a}},vi={[c.c.Issue]:{query:Le.a},[c.c.MergeRequest]:{query:He.a},[c.c.Epic]:{query:g.a},[c.c.Alert]:{query:"",skipQuery:!0}},ki={[c.c.Issue]:{query:o.a},[c.c.MergeRequest]:{query:m.a}},pi={[c.c.Issue]:{query:P.a,mutation:ue.a},[c.c.Epic]:{query:v.a,mutation:ne.a}},Si={[c.c.Issue]:{query:$.a},[c.c.MergeRequest]:{query:Q.a},[c.c.Epic]:{query:h.a}},gi={[c.e.project]:{query:$e.a},[c.e.group]:{query:Ve.a}},Ni={[c.c.Issue]:{issuableQuery:Pe.a,mutation:l.a,mutationName:"updateIssue"},[c.c.MergeRequest]:{issuableQuery:Oe.a,mutation:ge.a,mutationName:"mergeRequestSetLabels"},[c.c.Epic]:{issuableQuery:Ee.a,mutation:Fe.a,mutationName:"updateEpic"}},hi={start:"startDate",due:"dueDate"},bi={[hi.start]:{isDateFixed:"startDateIsFixed",dateFixed:"startDateFixed",dateFromMilestones:"startDateFromMilestones"},[hi.due]:{isDateFixed:"dueDateIsFixed",dateFixed:"dueDateFixed",dateFromMilestones:"dueDateFromMilestones"}},yi={[c.c.Issue]:{query:R.a,mutation:ve.a},[c.c.Epic]:{query:E.a,mutation:se.a},[c.c.MergeRequest]:{query:H.a,mutation:he.a}},Di={editEvent:"click_edit_button",rightSidebarLabel:"right_sidebar"},Ei={[c.c.Issue]:{query:j.a},[c.c.MergeRequest]:{query:X.a}},Ti={[c.c.Issue]:{query:O.a,mutation:ce.a},[c.c.Epic]:{query:p.a,mutation:te.a}},Fi={[c.c.Epic]:{query:y.a,mutation:re.a}},wi={[c.c.Issue]:{query:Ce.a},[c.c.MergeRequest]:{query:Xe.a}},Vi=null,qi={[c.c.Issue]:{query:si.a,mutation:ri.a},[c.c.MergeRequest]:{query:C.a,mutation:pe.a}},Pi={[c.c.Issue]:{query:{[c.e.group]:ti.a,[c.e.project]:ui.a}},[c.c.MergeRequest]:{query:{[c.e.group]:ti.a,[c.e.project]:ui.a}}},Ii={Milestone:"milestone"},Oi={Milestone:Object(d.g)("Issuable|milestone")},Ai=t()(Ii),$i={[Ii.Milestone]:"active"},_i={[Ii.Milestone]:{current:qi,list:Pi}},Ri={[c.c.Epic]:{query:F.a},[c.c.Issue]:{query:L.a},[c.c.MergeRequest]:{query:W.a}},xi={Create:"create",MarkDone:"mark-done"},ji={[xi.Create]:K.a,[xi.MarkDone]:ee.a};function Mi(e,i){return{noAttribute:Object(d.h)(Object(d.g)("DropdownWidget|No %{issuableAttribute}"),{issuableAttribute:e}),assignAttribute:Object(d.h)(Object(d.g)("DropdownWidget|Assign %{issuableAttribute}"),{issuableAttribute:e}),noAttributesFound:Object(d.h)(Object(d.g)("DropdownWidget|No %{issuableAttribute} found"),{issuableAttribute:e}),updateError:Object(d.h)(Object(d.g)("DropdownWidget|Failed to set %{issuableAttribute} on this %{issuableType}. Please try again."),{issuableAttribute:e,issuableType:i}),listFetchError:Object(d.h)(Object(d.g)("DropdownWidget|Failed to fetch the %{issuableAttribute} for this %{issuableType}. Please try again."),{issuableAttribute:e,issuableType:i}),currentFetchError:Object(d.h)(Object(d.g)("DropdownWidget|An error occurred while fetching the assigned %{issuableAttribute} of the selected %{issuableType}."),{issuableAttribute:e,issuableType:i}),noPermissionToView:Object(d.h)(Object(d.g)("DropdownWidget|You don't have permission to view this %{issuableAttribute}."),{issuableAttribute:e}),editConfirmation:Object(d.h)(Object(d.g)("DropdownWidget|You do not have permission to view the currently assigned %{issuableAttribute} and will not be able to choose it again if you reassign it."),{issuableAttribute:e}),editConfirmationCta:Object(d.h)(Object(d.g)("DropdownWidget|Edit %{issuableAttribute}"),{issuableAttribute:e}),editConfirmationCancel:Object(d.g)("DropdownWidget|Cancel")}}const Li=ei.a,Ui=ni.a,Ci=Object(d.a)("How to track time")},"7WD8":function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"projectUsersSearchWithMRPermissions"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"search"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"mergeRequestId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MergeRequestID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"users"},name:{kind:"Name",value:"projectMembers"},arguments:[{kind:"Argument",name:{kind:"Name",value:"search"},value:{kind:"Variable",name:{kind:"Name",value:"search"}}},{kind:"Argument",name:{kind:"Name",value:"relations"},value:{kind:"ListValue",values:[{kind:"EnumValue",value:"DIRECT"},{kind:"EnumValue",value:"INHERITED"},{kind:"EnumValue",value:"INVITED_GROUPS"}]}},{kind:"Argument",name:{kind:"Name",value:"sort"},value:{kind:"EnumValue",value:"USER_FULL_NAME_ASC"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"mergeRequestInteraction"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"mergeRequestId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"canMerge"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"user"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:630}};a.loc.source={body:'#import "../fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery projectUsersSearchWithMRPermissions(\n  $search: String!\n  $fullPath: ID!\n  $mergeRequestId: MergeRequestID!\n) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    users: projectMembers(\n      search: $search\n      relations: [DIRECT, INHERITED, INVITED_GROUPS]\n      sort: USER_FULL_NAME_ASC\n    ) {\n      nodes {\n        id\n        mergeRequestInteraction(id: $mergeRequestId) {\n          canMerge\n        }\n        user {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(d(n("yXJ/").definitions)),a.definitions=a.definitions.concat(d(n("ND1Y").definitions));var r={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),r[e.name.value]=i}})),e.exports=a,e.exports.projectUsersSearchWithMRPermissions=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=r[i]||new Set,t=new Set,d=new Set;for(a.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"projectUsersSearchWithMRPermissions")},"9d0U":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"mergeRequestTodos"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"currentUserTodos"},arguments:[{kind:"Argument",name:{kind:"Name",value:"state"},value:{kind:"EnumValue",value:"pending"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:257}};n.loc.source={body:"query mergeRequestTodos($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: mergeRequest(iid: $iid) {\n      id\n      currentUserTodos(state: pending) {\n        nodes {\n          id\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.mergeRequestTodos=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"mergeRequestTodos")},AHEt:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueTimeTracking"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"IssueTimeTrackingFragment"},directives:[]},{kind:"Field",name:{kind:"Name",value:"humanTimeEstimate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timeEstimate"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:305}};a.loc.source={body:'#import "~/graphql_shared/fragments/issue_time_tracking.fragment.graphql"\n\nquery issueTimeTracking($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: issue(iid: $iid) {\n      ...IssueTimeTrackingFragment\n      humanTimeEstimate\n      timeEstimate\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("RTH5").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issueTimeTracking=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"issueTimeTracking")},AMIN:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"groupMilestones"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"title"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"state"}},type:{kind:"NamedType",name:{kind:"Name",value:"MilestoneStateEnum"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attributes"},name:{kind:"Name",value:"milestones"},arguments:[{kind:"Argument",name:{kind:"Name",value:"searchTitle"},value:{kind:"Variable",name:{kind:"Name",value:"title"}}},{kind:"Argument",name:{kind:"Name",value:"state"},value:{kind:"Variable",name:{kind:"Name",value:"state"}}},{kind:"Argument",name:{kind:"Name",value:"sort"},value:{kind:"EnumValue",value:"EXPIRED_LAST_DUE_DATE_ASC"}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"20"}},{kind:"Argument",name:{kind:"Name",value:"includeAncestors"},value:{kind:"BooleanValue",value:!0}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MilestoneFragment"},directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:415}};a.loc.source={body:'#import "./milestone.fragment.graphql"\n\nquery groupMilestones($fullPath: ID!, $title: String, $state: MilestoneStateEnum) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    attributes: milestones(\n      searchTitle: $title\n      state: $state\n      sort: EXPIRED_LAST_DUE_DATE_ASC\n      first: 20\n      includeAncestors: true\n    ) {\n      nodes {\n        ...MilestoneFragment\n        state\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("ET+c").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.groupMilestones=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"groupMilestones")},B8Eg:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"escalationStatusQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"escalationStatus"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:188}};n.loc.source={body:"query escalationStatusQuery($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: issue(iid: $iid) {\n      id\n      escalationStatus\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.escalationStatusQuery=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"escalationStatusQuery")},Bml2:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicSubscribed"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"emailsDisabled"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscribed"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:187}};n.loc.source={body:"query epicSubscribed($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    emailsDisabled\n    issuable: epic(iid: $iid) {\n      id\n      subscribed\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.epicSubscribed=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"epicSubscribed")},Dwpb:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"mergeRequestMilestone"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attribute"},name:{kind:"Name",value:"milestone"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MilestoneFragment"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:279}};a.loc.source={body:'#import "./milestone.fragment.graphql"\n\nquery mergeRequestMilestone($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: mergeRequest(iid: $iid) {\n      id\n      attribute: milestone {\n        ...MilestoneFragment\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("ET+c").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.mergeRequestMilestone=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"mergeRequestMilestone")},EPAg:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"issuableTodoCreate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"TodoCreateInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"todoMutation"},name:{kind:"Name",value:"todoCreate"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"todo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:143}};n.loc.source={body:"mutation issuableTodoCreate($input: TodoCreateInput!) {\n  todoMutation: todoCreate(input: $input) {\n    todo {\n      id\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issuableTodoCreate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issuableTodoCreate")},"ET+c":function(e,i){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"MilestoneFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Milestone"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"webUrl"},name:{kind:"Name",value:"webPath"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expired"},arguments:[],directives:[]}]}}],loc:{start:0,end:95}};n.loc.source={body:"fragment MilestoneFragment on Milestone {\n  id\n  title\n  webUrl: webPath\n  dueDate\n  expired\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.MilestoneFragment=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"MilestoneFragment")},Ewud:function(e,i){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"EscalationStatusFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Issue"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"escalationStatus"},arguments:[],directives:[]}]}}],loc:{start:0,end:71}};n.loc.source={body:"fragment EscalationStatusFragment on Issue {\n  id\n  escalationStatus\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.EscalationStatusFragment=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"EscalationStatusFragment")},"GSV/":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueDueDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDate"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:170}};n.loc.source={body:"query issueDueDate($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: issue(iid: $iid) {\n      id\n      dueDate\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueDueDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueDueDate")},IQKu:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"deleteTimelog"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"TimelogDeleteInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"timelogDelete"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timelog"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"IssueTimeTrackingFragment"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"mergeRequest"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MergeRequestTimeTrackingFragment"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:422}};a.loc.source={body:'#import "~/graphql_shared/fragments/issue_time_tracking.fragment.graphql"\n#import "~/graphql_shared/fragments/merge_request_time_tracking.fragment.graphql"\n\nmutation deleteTimelog($input: TimelogDeleteInput!) {\n  timelogDelete(input: $input) {\n    errors\n    timelog {\n      id\n      issue {\n        ...IssueTimeTrackingFragment\n      }\n      mergeRequest {\n        ...MergeRequestTimeTrackingFragment\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(d(n("RTH5").definitions)),a.definitions=a.definitions.concat(d(n("J8uK").definitions));var r={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),r[e.name.value]=i}})),e.exports=a,e.exports.deleteTimelog=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=r[i]||new Set,t=new Set,d=new Set;for(a.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"deleteTimelog")},IuCd:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicLabels"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"labels"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Label"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:276}};a.loc.source={body:'#import "~/graphql_shared/fragments/label.fragment.graphql"\n\nquery epicLabels($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    issuable: epic(iid: $iid) {\n      id\n      labels {\n        nodes {\n          ...Label\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("NwwH").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.epicLabels=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"epicLabels")},J8uK:function(e,i,n){var a={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"MergeRequestTimeTrackingFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MergeRequest"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"humanTotalTimeSpent"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalTimeSpent"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timelogs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"TimelogFragment"},directives:[]}]}}]}}]}}],loc:{start:0,end:252}};a.loc.source={body:'#import "~/graphql_shared/fragments/issuable_timelogs.fragment.graphql"\n\nfragment MergeRequestTimeTrackingFragment on MergeRequest {\n  __typename\n  id\n  humanTotalTimeSpent\n  totalTimeSpent\n  timelogs {\n    nodes {\n      ...TimelogFragment\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("w9Yc").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.MergeRequestTimeTrackingFragment=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"MergeRequestTimeTrackingFragment")},KGGv:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueAssignees"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"author"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:458}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery issueAssignees($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: issue(iid: $iid) {\n      id\n      author {\n        ...User\n        ...UserAvailability\n      }\n      assignees {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(d(n("yXJ/").definitions)),a.definitions=a.definitions.concat(d(n("ND1Y").definitions));var r={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),r[e.name.value]=i}})),e.exports=a,e.exports.issueAssignees=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=r[i]||new Set,t=new Set,d=new Set;for(a.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"issueAssignees")},MHQH:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"mergeRequestSetSubscription"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"subscribedState"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"updateIssuableSubscription"},name:{kind:"Name",value:"mergeRequestSetSubscription"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"subscribedState"},value:{kind:"Variable",name:{kind:"Name",value:"subscribedState"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscribed"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:325}};n.loc.source={body:"mutation mergeRequestSetSubscription($fullPath: ID!, $iid: String!, $subscribedState: Boolean!) {\n  updateIssuableSubscription: mergeRequestSetSubscription(\n    input: { projectPath: $fullPath, iid: $iid, subscribedState: $subscribedState }\n  ) {\n    issuable: mergeRequest {\n      id\n      subscribed\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.mergeRequestSetSubscription=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"mergeRequestSetSubscription")},MIX8:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueConfidential"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidential"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:180}};n.loc.source={body:"query issueConfidential($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: issue(iid: $iid) {\n      id\n      confidential\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueConfidential=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueConfidential")},MPHe:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueLabels"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"labels"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Label"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:284}};a.loc.source={body:'#import "~/graphql_shared/fragments/label.fragment.graphql"\n\nquery issueLabels($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: issue(iid: $iid) {\n      id\n      labels {\n        nodes {\n          ...Label\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("NwwH").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issueLabels=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"issueLabels")},"NM/P":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateIssueDueDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateIssueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetDate"},name:{kind:"Name",value:"updateIssue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDate"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:173}};n.loc.source={body:"mutation updateIssueDueDate($input: UpdateIssueInput!) {\n  issuableSetDate: updateIssue(input: $input) {\n    issuable: issue {\n      id\n      dueDate\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.updateIssueDueDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"updateIssueDueDate")},Ngt0:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueSubscribed"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscribed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"emailsDisabled"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:197}};n.loc.source={body:"query issueSubscribed($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: issue(iid: $iid) {\n      id\n      subscribed\n      emailsDisabled\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueSubscribed=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueSubscribed")},PEAp:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicConfidential"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidential"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:172}};n.loc.source={body:"query epicConfidential($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    issuable: epic(iid: $iid) {\n      id\n      confidential\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.epicConfidential=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"epicConfidential")},QVnT:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"alertAssignees"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"domain"}},type:{kind:"NamedType",name:{kind:"Name",value:"AlertManagementDomainFilter"}},defaultValue:{kind:"EnumValue",value:"threat_monitoring"},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"alertManagementAlert"},arguments:[{kind:"Argument",name:{kind:"Name",value:"domain"},value:{kind:"Variable",name:{kind:"Name",value:"domain"}}},{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"iid"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:488}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery alertAssignees(\n  $domain: AlertManagementDomainFilter = threat_monitoring\n  $fullPath: ID!\n  $iid: String!\n) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: alertManagementAlert(domain: $domain, iid: $iid) {\n      iid\n      assignees {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(d(n("yXJ/").definitions)),a.definitions=a.definitions.concat(d(n("ND1Y").definitions));var r={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),r[e.name.value]=i}})),e.exports=a,e.exports.alertAssignees=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=r[i]||new Set,t=new Set,d=new Set;for(a.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"alertAssignees")},QYdl:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueTimeTrackingReport"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"IssueID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timelogs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"TimelogFragment"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:242}};a.loc.source={body:'#import "~/graphql_shared/fragments/issuable_timelogs.fragment.graphql"\n\nquery issueTimeTrackingReport($id: IssueID!) {\n  issuable: issue(id: $id) {\n    id\n    title\n    timelogs {\n      nodes {\n        ...TimelogFragment\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("w9Yc").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issueTimeTrackingReport=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"issueTimeTrackingReport")},RTH5:function(e,i,n){var a={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"IssueTimeTrackingFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Issue"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"humanTotalTimeSpent"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalTimeSpent"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timelogs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"TimelogFragment"},directives:[]}]}}]}}]}}],loc:{start:0,end:238}};a.loc.source={body:'#import "~/graphql_shared/fragments/issuable_timelogs.fragment.graphql"\n\nfragment IssueTimeTrackingFragment on Issue {\n  __typename\n  id\n  humanTotalTimeSpent\n  totalTimeSpent\n  timelogs {\n    nodes {\n      ...TimelogFragment\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("w9Yc").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.IssueTimeTrackingFragment=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"IssueTimeTrackingFragment")},RWen:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"issueSetAssignees"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"assigneeUsernames"}},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetAssignees"},name:{kind:"Name",value:"issueSetAssignees"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"assigneeUsernames"},value:{kind:"Variable",name:{kind:"Name",value:"assigneeUsernames"}}},{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:504}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nmutation issueSetAssignees($iid: String!, $assigneeUsernames: [String!]!, $fullPath: ID!) {\n  issuableSetAssignees: issueSetAssignees(\n    input: { iid: $iid, assigneeUsernames: $assigneeUsernames, projectPath: $fullPath }\n  ) {\n    issuable: issue {\n      id\n      assignees {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(d(n("yXJ/").definitions)),a.definitions=a.definitions.concat(d(n("ND1Y").definitions));var r={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),r[e.name.value]=i}})),e.exports=a,e.exports.issueSetAssignees=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=r[i]||new Set,t=new Set,d=new Set;for(a.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"issueSetAssignees")},TgHV:function(e,i){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"Author"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"User"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatarUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]}]}}],loc:{start:0,end:72}};n.loc.source={body:"fragment Author on User {\n  id\n  avatarUrl\n  name\n  username\n  webUrl\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.Author=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"Author")},U0nB:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"projectLabels"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"searchTerm"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"labels"},arguments:[{kind:"Argument",name:{kind:"Name",value:"searchTerm"},value:{kind:"Variable",name:{kind:"Name",value:"searchTerm"}}},{kind:"Argument",name:{kind:"Name",value:"includeAncestorGroups"},value:{kind:"BooleanValue",value:!0}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Label"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:289}};a.loc.source={body:'#import "~/graphql_shared/fragments/label.fragment.graphql"\n\nquery projectLabels($fullPath: ID!, $searchTerm: String) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    labels(searchTerm: $searchTerm, includeAncestorGroups: true) {\n      nodes {\n        ...Label\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("NwwH").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.projectLabels=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"projectLabels")},V85p:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"mrTimeTrackingReport"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MergeRequestID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timelogs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"TimelogFragment"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:253}};a.loc.source={body:'#import "~/graphql_shared/fragments/issuable_timelogs.fragment.graphql"\n\nquery mrTimeTrackingReport($id: MergeRequestID!) {\n  issuable: mergeRequest(id: $id) {\n    id\n    title\n    timelogs {\n      nodes {\n        ...TimelogFragment\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("w9Yc").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.mrTimeTrackingReport=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"mrTimeTrackingReport")},VW3Q:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueParticipants"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"getStatus"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[{kind:"Directive",name:{kind:"Name",value:"include"},arguments:[{kind:"Argument",name:{kind:"Name",value:"if"},value:{kind:"Variable",name:{kind:"Name",value:"getStatus"}}}]}]}]}}]}}]}}]}}]}}],loc:{start:0,end:451}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery issueParticipants($fullPath: ID!, $iid: String!, $getStatus: Boolean = false) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: issue(iid: $iid) {\n      id\n      participants {\n        nodes {\n          ...User\n          ...UserAvailability @include(if: $getStatus)\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(d(n("yXJ/").definitions)),a.definitions=a.definitions.concat(d(n("ND1Y").definitions));var r={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),r[e.name.value]=i}})),e.exports=a,e.exports.issueParticipants=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=r[i]||new Set,t=new Set,d=new Set;for(a.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"issueParticipants")},ZMa4:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateEpicStartDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEpicInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetDate"},name:{kind:"Name",value:"updateEpic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateIsFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateFromMilestones"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:231}};n.loc.source={body:"mutation updateEpicStartDate($input: UpdateEpicInput!) {\n  issuableSetDate: updateEpic(input: $input) {\n    issuable: epic {\n      id\n      startDateIsFixed\n      startDateFixed\n      startDateFromMilestones\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.updateEpicStartDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"updateEpicStartDate")},adGk:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"projectIssueMilestone"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attribute"},name:{kind:"Name",value:"milestone"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MilestoneFragment"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:272}};a.loc.source={body:'#import "./milestone.fragment.graphql"\n\nquery projectIssueMilestone($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: issue(iid: $iid) {\n      id\n      attribute: milestone {\n        ...MilestoneFragment\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("ET+c").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.projectIssueMilestone=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"projectIssueMilestone")},ayGe:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"projectUsersSearch"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"search"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"after"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"users"},name:{kind:"Name",value:"projectMembers"},arguments:[{kind:"Argument",name:{kind:"Name",value:"search"},value:{kind:"Variable",name:{kind:"Name",value:"search"}}},{kind:"Argument",name:{kind:"Name",value:"relations"},value:{kind:"ListValue",values:[{kind:"EnumValue",value:"DIRECT"},{kind:"EnumValue",value:"INHERITED"},{kind:"EnumValue",value:"INVITED_GROUPS"}]}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"after"}}},{kind:"Argument",name:{kind:"Name",value:"sort"},value:{kind:"EnumValue",value:"USER_FULL_NAME_ASC"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startCursor"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"user"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:641}};a.loc.source={body:'#import "../fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery projectUsersSearch($search: String!, $fullPath: ID!, $after: String, $first: Int) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    users: projectMembers(\n      search: $search\n      relations: [DIRECT, INHERITED, INVITED_GROUPS]\n      first: $first\n      after: $after\n      sort: USER_FULL_NAME_ASC\n    ) {\n      pageInfo {\n        hasNextPage\n        endCursor\n        startCursor\n      }\n      nodes {\n        id\n        user {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(d(n("yXJ/").definitions)),a.definitions=a.definitions.concat(d(n("ND1Y").definitions));var r={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),r[e.name.value]=i}})),e.exports=a,e.exports.projectUsersSearch=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=r[i]||new Set,t=new Set,d=new Set;for(a.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"projectUsersSearch")},bc8f:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateEpicLabels"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEpicInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"updateIssuableLabels"},name:{kind:"Name",value:"updateEpic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"labels"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Label"},directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:288}};a.loc.source={body:'#import "~/graphql_shared/fragments/label.fragment.graphql"\n\nmutation updateEpicLabels($input: UpdateEpicInput!) {\n  updateIssuableLabels: updateEpic(input: $input) {\n    issuable: epic {\n      id\n      labels {\n        nodes {\n          ...Label\n        }\n      }\n    }\n    errors\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("NwwH").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.updateEpicLabels=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"updateEpicLabels")},bpen:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueTodos"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"currentUserTodos"},arguments:[{kind:"Argument",name:{kind:"Name",value:"state"},value:{kind:"EnumValue",value:"pending"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:243}};n.loc.source={body:"query issueTodos($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: issue(iid: $iid) {\n      id\n      currentUserTodos(state: pending) {\n        nodes {\n          id\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueTodos=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueTodos")},csG4:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getMrParticipants"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"getStatus"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[{kind:"Directive",name:{kind:"Name",value:"include"},arguments:[{kind:"Argument",name:{kind:"Name",value:"if"},value:{kind:"Variable",name:{kind:"Name",value:"getStatus"}}}]}]}]}}]}}]}}]}}]}}],loc:{start:0,end:458}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery getMrParticipants($fullPath: ID!, $iid: String!, $getStatus: Boolean = false) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: mergeRequest(iid: $iid) {\n      id\n      participants {\n        nodes {\n          ...User\n          ...UserAvailability @include(if: $getStatus)\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(d(n("yXJ/").definitions)),a.definitions=a.definitions.concat(d(n("ND1Y").definitions));var r={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),r[e.name.value]=i}})),e.exports=a,e.exports.getMrParticipants=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=r[i]||new Set,t=new Set,d=new Set;for(a.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"getMrParticipants")},"eO/Q":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicTodos"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"currentUserTodos"},arguments:[{kind:"Argument",name:{kind:"Name",value:"state"},value:{kind:"EnumValue",value:"pending"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:234}};n.loc.source={body:"query epicTodos($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    issuable: epic(iid: $iid) {\n      id\n      currentUserTodos(state: pending) {\n        nodes {\n          id\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.epicTodos=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"epicTodos")},es8a:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"projectIssueSetSubscription"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"subscribedState"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"updateIssuableSubscription"},name:{kind:"Name",value:"issueSetSubscription"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"subscribedState"},value:{kind:"Variable",name:{kind:"Name",value:"subscribedState"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscribed"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:311}};n.loc.source={body:"mutation projectIssueSetSubscription($fullPath: ID!, $iid: String!, $subscribedState: Boolean!) {\n  updateIssuableSubscription: issueSetSubscription(\n    input: { projectPath: $fullPath, iid: $iid, subscribedState: $subscribedState }\n  ) {\n    issuable: issue {\n      id\n      subscribed\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.projectIssueSetSubscription=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"projectIssueSetSubscription")},"il++":function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"issueSetLabels"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateIssueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"updateIssuableLabels"},name:{kind:"Name",value:"updateIssue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"labels"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Label"},directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:289}};a.loc.source={body:'#import "~/graphql_shared/fragments/label.fragment.graphql"\n\nmutation issueSetLabels($input: UpdateIssueInput!) {\n  updateIssuableLabels: updateIssue(input: $input) {\n    issuable: issue {\n      id\n      labels {\n        nodes {\n          ...Label\n        }\n      }\n    }\n    errors\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("NwwH").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issueSetLabels=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"issueSetLabels")},iuSE:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"projectMilestones"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"title"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"state"}},type:{kind:"NamedType",name:{kind:"Name",value:"MilestoneStateEnum"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attributes"},name:{kind:"Name",value:"milestones"},arguments:[{kind:"Argument",name:{kind:"Name",value:"searchTitle"},value:{kind:"Variable",name:{kind:"Name",value:"title"}}},{kind:"Argument",name:{kind:"Name",value:"state"},value:{kind:"Variable",name:{kind:"Name",value:"state"}}},{kind:"Argument",name:{kind:"Name",value:"sort"},value:{kind:"EnumValue",value:"EXPIRED_LAST_DUE_DATE_ASC"}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"20"}},{kind:"Argument",name:{kind:"Name",value:"includeAncestors"},value:{kind:"BooleanValue",value:!0}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MilestoneFragment"},directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:419}};a.loc.source={body:'#import "./milestone.fragment.graphql"\n\nquery projectMilestones($fullPath: ID!, $title: String, $state: MilestoneStateEnum) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    attributes: milestones(\n      searchTitle: $title\n      state: $state\n      sort: EXPIRED_LAST_DUE_DATE_ASC\n      first: 20\n      includeAncestors: true\n    ) {\n      nodes {\n        ...MilestoneFragment\n        state\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("ET+c").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.projectMilestones=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"projectMilestones")},lUSz:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"mergeRequestSetMilestone"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"attributeId"}},type:{kind:"NamedType",name:{kind:"Name",value:"MilestoneID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetAttribute"},name:{kind:"Name",value:"mergeRequestSetMilestone"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"milestoneId"},value:{kind:"Variable",name:{kind:"Name",value:"attributeId"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attribute"},name:{kind:"Name",value:"milestone"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:363}};n.loc.source={body:"mutation mergeRequestSetMilestone($fullPath: ID!, $iid: String!, $attributeId: MilestoneID) {\n  issuableSetAttribute: mergeRequestSetMilestone(\n    input: { projectPath: $fullPath, iid: $iid, milestoneId: $attributeId }\n  ) {\n    errors\n    issuable: mergeRequest {\n      id\n      attribute: milestone {\n        title\n        id\n        state\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.mergeRequestSetMilestone=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"mergeRequestSetMilestone")},m9sB:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"mergeRequestLabels"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"labels"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Label"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:299}};a.loc.source={body:'#import "~/graphql_shared/fragments/label.fragment.graphql"\n\nquery mergeRequestLabels($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: mergeRequest(iid: $iid) {\n      id\n      labels {\n        nodes {\n          ...Label\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("NwwH").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.mergeRequestLabels=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"mergeRequestLabels")},mawF:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"mergeRequestSubscribed"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscribed"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:191}};n.loc.source={body:"query mergeRequestSubscribed($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: mergeRequest(iid: $iid) {\n      id\n      subscribed\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.mergeRequestSubscribed=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"mergeRequestSubscribed")},mxyH:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"mergeRequestTimeTracking"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MergeRequestTimeTrackingFragment"},directives:[]},{kind:"Field",name:{kind:"Name",value:"humanTimeEstimate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timeEstimate"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:335}};a.loc.source={body:'#import "~/graphql_shared/fragments/merge_request_time_tracking.fragment.graphql"\n\nquery mergeRequestTimeTracking($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: mergeRequest(iid: $iid) {\n      ...MergeRequestTimeTrackingFragment\n      humanTimeEstimate\n      timeEstimate\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("J8uK").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.mergeRequestTimeTracking=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"mergeRequestTimeTracking")},nQ35:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"alertSetAssignees"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"assigneeUsernames"}},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetAssignees"},name:{kind:"Name",value:"alertSetAssignees"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"assigneeUsernames"},value:{kind:"Variable",name:{kind:"Name",value:"assigneeUsernames"}}},{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"alert"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"iid"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"notes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"AlertNote"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:652}};a.loc.source={body:'#import "~/graphql_shared/fragments/alert_note.fragment.graphql"\n#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nmutation alertSetAssignees($fullPath: ID!, $assigneeUsernames: [String!]!, $iid: String!) {\n  issuableSetAssignees: alertSetAssignees(\n    input: { iid: $iid, assigneeUsernames: $assigneeUsernames, projectPath: $fullPath }\n  ) {\n    errors\n    issuable: alert {\n      iid\n      assignees {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n      notes {\n        nodes {\n          ...AlertNote\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(d(n("1XfR").definitions)),a.definitions=a.definitions.concat(d(n("yXJ/").definitions)),a.definitions=a.definitions.concat(d(n("ND1Y").definitions));var r={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),r[e.name.value]=i}})),e.exports=a,e.exports.alertSetAssignees=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=r[i]||new Set,t=new Set,d=new Set;for(a.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"alertSetAssignees")},pKR4:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"mergeRequestReference"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"reference"},arguments:[{kind:"Argument",name:{kind:"Name",value:"full"},value:{kind:"BooleanValue",value:!0}}],directives:[]}]}}]}}]}}],loc:{start:0,end:201}};n.loc.source={body:"query mergeRequestReference($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: mergeRequest(iid: $iid) {\n      id\n      reference(full: true)\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.mergeRequestReference=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"mergeRequestReference")},paIi:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueReference"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"reference"},arguments:[{kind:"Argument",name:{kind:"Name",value:"full"},value:{kind:"BooleanValue",value:!0}}],directives:[]}]}}]}}]}}],loc:{start:0,end:186}};n.loc.source={body:"query issueReference($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: issue(iid: $iid) {\n      id\n      reference(full: true)\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueReference=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueReference")},rGXj:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateEscalationStatus"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"status"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"IssueEscalationStatus"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"issueSetEscalationStatus"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"status"},value:{kind:"Variable",name:{kind:"Name",value:"status"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"clientMutationId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"EscalationStatusFragment"},directives:[]}]}}]}}]}}],loc:{start:0,end:368}};a.loc.source={body:'#import "ee_else_ce/sidebar/queries/escalation_status.fragment.graphql"\n\nmutation updateEscalationStatus($projectPath: ID!, $status: IssueEscalationStatus!, $iid: String!) {\n  issueSetEscalationStatus(input: { projectPath: $projectPath, status: $status, iid: $iid }) {\n    errors\n    clientMutationId\n    issue {\n      id\n      ...EscalationStatusFragment\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("Ewud").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.updateEscalationStatus=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"updateEscalationStatus")},sJJu:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getMrAssignees"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"author"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]},{kind:"Field",name:{kind:"Name",value:"mergeRequestInteraction"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"canMerge"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]},{kind:"Field",name:{kind:"Name",value:"mergeRequestInteraction"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"canMerge"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"userPermissions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"canMerge"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:646}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery getMrAssignees($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    issuable: mergeRequest(iid: $iid) {\n      id\n      author {\n        ...User\n        ...UserAvailability\n        mergeRequestInteraction {\n          canMerge\n        }\n      }\n      assignees {\n        nodes {\n          ...User\n          ...UserAvailability\n          mergeRequestInteraction {\n            canMerge\n          }\n        }\n      }\n      userPermissions {\n        canMerge\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(d(n("yXJ/").definitions)),a.definitions=a.definitions.concat(d(n("ND1Y").definitions));var r={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),r[e.name.value]=i}})),e.exports=a,e.exports.getMrAssignees=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=r[i]||new Set,t=new Set,d=new Set;for(a.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"getMrAssignees")},sg9S:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateEpicDueDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEpicInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetDate"},name:{kind:"Name",value:"updateEpic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateIsFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateFromMilestones"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:223}};n.loc.source={body:"mutation updateEpicDueDate($input: UpdateEpicInput!) {\n  issuableSetDate: updateEpic(input: $input) {\n    issuable: epic {\n      id\n      dueDateIsFixed\n      dueDateFixed\n      dueDateFromMilestones\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.updateEpicDueDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"updateEpicDueDate")},t26s:function(e,i,n){"use strict";n("h8Et");var a=n("H8gz"),t=n("u1ru"),d=n("lT7T"),r=n("cuRJ"),l=n("zLBL"),s=n("qINL"),o=n("ly/8"),u=n("mpzd"),m=n("t9l/"),c=n("5ee2"),f=n("cBN0"),v={name:"TimeTrackingCollapsedState",components:{GlIcon:a.a},directives:{GlTooltip:o.a},props:{showComparisonState:{type:Boolean,required:!0},showSpentOnlyState:{type:Boolean,required:!0},showEstimateOnlyState:{type:Boolean,required:!0},showNoTimeTrackingState:{type:Boolean,required:!0},timeSpentHumanReadable:{type:String,required:!1,default:""},timeEstimateHumanReadable:{type:String,required:!1,default:""}},computed:{divClass(){return this.showComparisonState?"compare":this.showEstimateOnlyState?"estimate-only":this.showSpentOnlyState?"spend-only":this.showNoTimeTrackingState?"no-tracking":""},spanClass(){return this.showComparisonState?"":this.showEstimateOnlyState||this.showSpentOnlyState?"bold":this.showNoTimeTrackingState?"no-value collapse-truncated-title gl-pt-2 gl-px-3 gl-font-sm":""},text(){return this.showComparisonState?`${this.timeSpentHumanReadable} / ${this.timeEstimateHumanReadable}`:this.showEstimateOnlyState?"-- / "+this.timeEstimateHumanReadable:this.showSpentOnlyState?this.timeSpentHumanReadable+" / --":this.showNoTimeTrackingState?Object(m.a)("None"):""},timeTrackedTooltipText(){let e;return this.showComparisonState?e=Object(m.a)("Time remaining"):this.showEstimateOnlyState?e=Object(m.a)("Estimated"):this.showSpentOnlyState&&(e=Object(m.a)("Time spent")),Object(m.h)("%{title}: %{text}",{title:e,text:this.text})},tooltipText(){return this.showNoTimeTrackingState?Object(m.a)("Time tracking"):this.timeTrackedTooltipText}}},k=n("bPvS"),p=Object(k.a)(v,(function(){var e=this.$createElement,i=this._self._c||e;return i("div",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip:body.viewport.left",arg:"body",modifiers:{viewport:!0,left:!0}}],staticClass:"sidebar-collapsed-icon",attrs:{title:this.tooltipText,"data-testid":"collapsedState"}},[i("gl-icon",{attrs:{name:"timer"}}),this._v(" "),i("div",{staticClass:"time-tracking-collapsed-summary"},[i("div",{class:this.divClass},[i("span",{class:this.spanClass},[this._v(" "+this._s(this.text)+" ")])])])],1)}),[],!1,null,null,null).exports,S=n("z7LP"),g=n("U1Ws"),N={name:"TimeTrackingComparisonPane",components:{GlProgressBar:S.a},directives:{GlTooltip:o.a},props:{timeSpent:{type:Number,required:!0},timeEstimate:{type:Number,required:!0},timeSpentHumanReadable:{type:String,required:!0},timeEstimateHumanReadable:{type:String,required:!0},limitToHours:{type:Boolean,required:!1,default:!1}},computed:{parsedTimeRemaining(){const e=this.timeEstimate-this.timeSpent;return Object(g.A)(e,{limitToHours:this.limitToHours})},timeRemainingHumanReadable(){return Object(g.D)(this.parsedTimeRemaining)},timeRemainingTooltip(){const{timeRemainingHumanReadable:e,timeRemainingMinutes:i}=this;return i<0?Object(m.h)(Object(m.g)("TimeTracking|Over by %{timeRemainingHumanReadable}"),{timeRemainingHumanReadable:e}):Object(m.h)(Object(m.g)("TimeTracking|Time remaining: %{timeRemainingHumanReadable}"),{timeRemainingHumanReadable:e})},timeRemainingMinutes(){return this.timeEstimate-this.timeSpent},timeRemainingPercent(){return Math.floor(this.timeSpent/this.timeEstimate*100)},timeRemainingStatusClass(){return this.timeEstimate>=this.timeSpent?"within_estimate":"over_estimate"},progressBarVariant(){return this.timeRemainingPercent>100?"danger":"primary"}}},h=Object(k.a)(N,(function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("div",{staticClass:"gl-mt-2",attrs:{"data-testid":"timeTrackingComparisonPane"}},[n("div",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip"}],staticClass:"compare-meter",class:e.timeRemainingStatusClass,attrs:{"data-testid":"compareMeter",title:e.timeRemainingTooltip}},[n("gl-progress-bar",{attrs:{"data-testid":"timeRemainingProgress",value:e.timeRemainingPercent,variant:e.progressBarVariant}}),e._v(" "),n("div",{staticClass:"compare-display-container gl-display-flex gl-justify-content-space-between gl-mt-2"},[n("div",{staticClass:"gl-float-left"},[n("span",{staticClass:"gl-text-gray-400"},[e._v(e._s(e.s__("TimeTracking|Spent")))]),e._v(" "),n("span",{staticClass:"compare-value spent"},[e._v(e._s(e.timeSpentHumanReadable))])]),e._v(" "),n("div",{staticClass:"estimated gl-float-right"},[n("span",{staticClass:"gl-text-gray-400"},[e._v(e._s(e.s__("TimeTrackingEstimated|Est")))]),e._v(" "),n("span",{staticClass:"compare-value"},[e._v(e._s(e.timeEstimateHumanReadable))])])])],1)])}),[],!1,null,null,null).exports,b=n("9LGn"),y=n("yYHy"),D={name:"TimeTrackingHelpState",components:{GlButton:r.a},directives:{SafeHtml:b.a},computed:{href:()=>Object(y.x)(gon.relative_url_root||"","/help/user/project/time_tracking.md"),estimateText:()=>Object(m.h)(Object(m.g)("estimateCommand|%{slash_command} overwrites the total estimated time."),{slash_command:"<code>/estimate</code>"},!1),spendText:()=>Object(m.h)(Object(m.g)("spendCommand|%{slash_command} adds or subtracts time already spent."),{slash_command:"<code>/spend</code>"},!1)}},E=Object(k.a)(D,(function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("div",{staticClass:"sidebar-help-state gl-bg-white gl-border-gray-100 gl-border-t-solid gl-border-b-solid gl-border-1",attrs:{"data-testid":"helpPane"}},[n("div",{staticClass:"time-tracking-info"},[n("h4",[e._v(e._s(e.__("Track time with quick actions")))]),e._v(" "),n("p",[e._v(e._s(e.__("Quick actions can be used in description and comment boxes.")))]),e._v(" "),n("p",{directives:[{name:"safe-html",rawName:"v-safe-html",value:e.estimateText,expression:"estimateText"}]}),e._v(" "),n("p",{directives:[{name:"safe-html",rawName:"v-safe-html",value:e.spendText,expression:"spendText"}]}),e._v(" "),n("gl-button",{attrs:{href:e.href}},[e._v(e._s(e.__("Learn more")))])],1)])}),[],!1,null,null,null).exports,T=(n("0no1"),n("3R5X"),n("gdbl"),n("g+EE"),n("PJNv")),F=n("teVv"),w=n("LkRf"),V=n("+lve"),q=n("IQKu"),P=n.n(q);var I={components:{GlLoadingIcon:l.a,GlTableLite:T.a,GlButton:r.a},directives:{GlTooltip:o.a},inject:["issuableType"],props:{limitToHours:{type:Boolean,default:!1,required:!1},issuableId:{type:String,required:!0}},data:()=>({report:[],isLoading:!0,removingIds:[]}),apollo:{report:{query(){return c.z[this.issuableType].query},variables(){return this.getQueryVariables()},update(e){return this.isLoading=!1,this.extractTimelogs(e)},error(){Object(F.createAlert)({message:Object(m.a)("Something went wrong. Please try again.")})}}},computed:{deleteButtonTooltip:()=>Object(m.g)("TimeTracking|Delete time spent")},methods:{isDeletingTimelog(e){return this.removingIds.includes(e)},isIssue(){return"issue"===this.issuableType},getQueryVariables(){return{id:Object(V.c)(this.getGraphQLEntityType(),this.issuableId)}},getGraphQLEntityType(){return this.isIssue()?w.h:w.j},extractTimelogs(e){var i,n;return((null==e||null===(i=e.issuable)||void 0===i||null===(n=i.timelogs)||void 0===n?void 0:n.nodes)||[]).slice().sort((function(e,i){return new Date(e.spentAt)-new Date(i.spentAt)}))},formatDate:e=>Object(g.g)(e,'mmmm d, yyyy, HH:MM ("UTC:" o)'),getSummary:(e,i)=>null!=e?e:null==i?void 0:i.body,getTotalTimeSpent(){const e=this.report.reduce((function(e,i){return e+i.timeSpent}),0);return this.formatTimeSpent(e)},formatTimeSpent(e){return(e<0?"- ":"")+Object(g.D)(Object(g.A)(e,{limitToHours:this.limitToHours}))},deleteTimelog(e){var i=this;this.removingIds.push(e),this.$apollo.mutate({mutation:P.a,variables:{input:{id:e}}}).then((function(e){var i,n;let{data:a}=e;if(null!==(i=a.timelogDelete)&&void 0!==i&&null!==(n=i.errors)&&void 0!==n&&n.length)throw new Error(a.timelogDelete.errors[0])})).catch((function(e){Object(F.createAlert)({message:Object(m.g)("TimeTracking|An error occurred while removing the timelog."),captureError:!0,error:e})})).finally((function(){i.removingIds.splice(i.removingIds.indexOf(e),1)}))}},fields:[{key:"spentAt",label:Object(m.a)("Spent at"),sortable:!0,tdClass:"gl-w-quarter"},{key:"user",label:Object(m.a)("User"),sortable:!0},{key:"timeSpent",label:Object(m.a)("Time spent"),sortable:!0,tdClass:"gl-w-15"},{key:"summary",label:Object(m.a)("Summary / note"),sortable:!0},{key:"actions",label:"",tdClass:"gl-w-10"}]},O=Object(k.a)(I,(function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("div",[e.isLoading?n("div",[n("gl-loading-icon",{attrs:{size:"lg"}})],1):n("gl-table-lite",{attrs:{items:e.report,fields:e.$options.fields,"foot-clone":""},scopedSlots:e._u([{key:"cell(spentAt)",fn:function(i){var a=i.item.spentAt;return[n("div",[e._v(e._s(e.formatDate(a)))])]}},{key:"foot(spentAt)",fn:function(){return[e._v(" ")]},proxy:!0},{key:"cell(user)",fn:function(i){var a=i.item.user;return[n("div",[e._v(e._s(a.name))])]}},{key:"foot(user)",fn:function(){return[e._v(" ")]},proxy:!0},{key:"cell(timeSpent)",fn:function(i){var a=i.item.timeSpent;return[n("div",[e._v(e._s(e.formatTimeSpent(a)))])]}},{key:"foot(timeSpent)",fn:function(){return[n("div",[e._v(e._s(e.getTotalTimeSpent()))])]},proxy:!0},{key:"cell(summary)",fn:function(i){var a=i.item,t=a.summary,d=a.note;return[n("div",[e._v(e._s(e.getSummary(t,d)))])]}},{key:"foot(summary)",fn:function(){return[e._v(" ")]},proxy:!0},{key:"cell(actions)",fn:function(i){var a=i.item,t=a.id;return[a.userPermissions.adminTimelog?n("div",[n("gl-button",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip",value:{title:e.deleteButtonTooltip},expression:"{ title: deleteButtonTooltip }"}],attrs:{category:"secondary",icon:"remove","data-testid":"deleteButton",loading:e.isDeletingTimelog(t)},on:{click:function(i){return e.deleteTimelog(t)}}})],1):e._e()]}},{key:"foot(actions)",fn:function(){return[e._v(" ")]},proxy:!0}])})],1)}),[],!1,null,null,null).exports,A=n("nPFI");var $={name:"TimeTrackingSpentOnlyPane",timeSpent:Object(m.g)("TimeTracking|%{spentStart}Spent: %{spentEnd}"),components:{GlSprintf:A.a},props:{timeSpentHumanReadable:{type:String,required:!0}}},_=Object(k.a)($,(function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("div",{attrs:{"data-testid":"spentOnlyPane"}},[n("gl-sprintf",{attrs:{message:e.$options.timeSpent},scopedSlots:e._u([{key:"spent",fn:function(i){var a=i.content;return[n("span",{staticClass:"gl-font-weight-bold"},[e._v(e._s(a))]),e._v(e._s(e.timeSpentHumanReadable)+"\n    ")]}}])})],1)}),[],!1,null,null,null).exports,R={name:"IssuableTimeTracker",i18n:{noTimeTrackingText:Object(m.a)("No estimate or time spent"),estimatedOnlyText:Object(m.g)("TimeTracking|Estimated:")},components:{GlIcon:a.a,GlLink:t.a,GlModal:d.a,GlButton:r.a,GlLoadingIcon:l.a,TimeTrackingCollapsedState:p,TimeTrackingSpentOnlyPane:_,TimeTrackingComparisonPane:h,TimeTrackingHelpState:E,TimeTrackingReport:O},directives:{GlModal:s.a,GlTooltip:o.a},inject:{issuableType:{default:null}},props:{limitToHours:{type:Boolean,default:!1,required:!1},fullPath:{type:String,required:!1,default:""},issuableId:{type:String,required:!1,default:""},issuableIid:{type:String,required:!1,default:""},initialTimeTracking:{type:Object,required:!1,default:null},showCollapsed:{type:Boolean,default:!0,required:!1}},data(){return{showHelp:!1,timeTracking:{...this.initialTimeTracking}}},apollo:{issuableTimeTracking:{query(){return c.y[this.issuableType].query},skip(){return!this.issuableType||!c.y[this.issuableType]||(!!this.initialTimeTracking||(!this.issuableIid||!this.fullPath))},variables(){return{iid:this.issuableIid,fullPath:this.fullPath}},update(e){var i;this.timeTracking={...null===(i=e.workspace)||void 0===i?void 0:i.issuable}}}},computed:{isTimeTrackingInfoLoading(){var e,i,n;return null!==(e=null===(i=this.$apollo)||void 0===i||null===(n=i.queries.issuableTimeTracking)||void 0===n?void 0:n.loading)&&void 0!==e&&e},timeEstimate(){var e;return(null===(e=this.timeTracking)||void 0===e?void 0:e.timeEstimate)||0},totalTimeSpent(){var e;return(null===(e=this.timeTracking)||void 0===e?void 0:e.totalTimeSpent)||0},humanTimeEstimate(){var e;return(null===(e=this.timeTracking)||void 0===e?void 0:e.humanTimeEstimate)||""},humanTotalTimeSpent(){var e;return(null===(e=this.timeTracking)||void 0===e?void 0:e.humanTotalTimeSpent)||""},hasTotalTimeSpent(){return Boolean(this.totalTimeSpent)},hasTimeEstimate(){return Boolean(this.timeEstimate)},showComparisonState(){return this.hasTimeEstimate&&this.hasTotalTimeSpent},showEstimateOnlyState(){return this.hasTimeEstimate&&!this.hasTotalTimeSpent},showSpentOnlyState(){return this.hasTotalTimeSpent&&!this.hasTimeEstimate},showNoTimeTrackingState(){return!this.hasTimeEstimate&&!this.hasTotalTimeSpent},showHelpState(){return Boolean(this.showHelp)},isTimeReportSupported(){return[u.c.Issue,u.c.MergeRequest].includes(this.issuableType)&&this.issuableId},timeTrackingIconTitle(){return this.showHelpState?"":c.a},timeTrackingIconName(){return this.showHelpState?"close":"question-o"}},watch:{initialTimeTracking(e){this.timeTracking=e}},created(){f.a.$on("timeTracker:refresh",this.refresh)},methods:{toggleHelpState(e){this.showHelp=e},refresh(){this.$apollo.queries.issuableTimeTracking.refetch()}}},x=Object(k.a)(R,(function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("div",{staticClass:"time-tracker sidebar-help-wrap",attrs:{"data-testid":"time-tracker"}},[e.showCollapsed?n("time-tracking-collapsed-state",{attrs:{"show-comparison-state":e.showComparisonState,"show-no-time-tracking-state":e.showNoTimeTrackingState,"show-help-state":e.showHelpState,"show-spent-only-state":e.showSpentOnlyState,"show-estimate-only-state":e.showEstimateOnlyState,"time-spent-human-readable":e.humanTotalTimeSpent,"time-estimate-human-readable":e.humanTimeEstimate}}):e._e(),e._v(" "),n("div",{staticClass:"hide-collapsed gl-line-height-20 gl-text-gray-900 gl-display-flex gl-align-items-center gl-font-weight-bold gl-mr-3"},[e._v("\n    "+e._s(e.__("Time tracking"))+"\n    "),e.isTimeTrackingInfoLoading?n("gl-loading-icon",{staticClass:"gl-ml-2",attrs:{size:"sm",inline:""}}):e._e(),e._v(" "),n("gl-button",{staticClass:"gl-ml-auto",attrs:{"data-testid":e.showHelpState?"closeHelpButton":"helpButton",category:"tertiary",size:"small",variant:"link"},on:{click:function(i){return e.toggleHelpState(!e.showHelpState)}}},[n("gl-icon",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip.left",modifiers:{left:!0}}],staticClass:"gl-text-gray-900!",attrs:{title:e.timeTrackingIconTitle,name:e.timeTrackingIconName}})],1)],1),e._v(" "),e.isTimeTrackingInfoLoading?e._e():n("div",{staticClass:"hide-collapsed"},[e.showEstimateOnlyState?n("div",{attrs:{"data-testid":"estimateOnlyPane"}},[n("span",[e._v(e._s(e.$options.i18n.estimatedOnlyText)+" ")]),e._v(e._s(e.humanTimeEstimate)+"\n    ")]):e._e(),e._v(" "),e.showSpentOnlyState?n("time-tracking-spent-only-pane",{attrs:{"time-spent-human-readable":e.humanTotalTimeSpent}}):e._e(),e._v(" "),e.showNoTimeTrackingState?n("div",{attrs:{"data-testid":"noTrackingPane"}},[n("span",{staticClass:"gl-text-gray-500"},[e._v(e._s(e.$options.i18n.noTimeTrackingText))])]):e._e(),e._v(" "),e.showComparisonState?n("time-tracking-comparison-pane",{attrs:{"time-estimate":e.timeEstimate,"time-spent":e.totalTimeSpent,"time-spent-human-readable":e.humanTotalTimeSpent,"time-estimate-human-readable":e.humanTimeEstimate,"limit-to-hours":e.limitToHours}}):e._e(),e._v(" "),e.isTimeReportSupported?[e.hasTotalTimeSpent?n("gl-link",{directives:[{name:"gl-modal",rawName:"v-gl-modal",value:"time-tracking-report",expression:"'time-tracking-report'"}],attrs:{"data-testid":"reportLink",href:"#"}},[e._v("\n        "+e._s(e.__("Time tracking report"))+"\n      ")]):e._e(),e._v(" "),n("gl-modal",{attrs:{"modal-id":"time-tracking-report",size:"lg",title:e.__("Time tracking report"),"hide-footer":!0}},[n("time-tracking-report",{attrs:{"limit-to-hours":e.limitToHours,"issuable-id":e.issuableId}})],1)]:e._e(),e._v(" "),n("transition",{attrs:{name:"help-state-toggle"}},[e.showHelpState?n("time-tracking-help-state"):e._e()],1)],2)],1)}),[],!1,null,null,null);i.a=x.exports},tB5k:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicParticipants"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:286}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n\nquery epicParticipants($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    issuable: epic(iid: $iid) {\n      id\n      participants {\n        nodes {\n          ...User\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("yXJ/").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.epicParticipants=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"epicParticipants")},tSSo:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"groupLabels"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"searchTerm"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"labels"},arguments:[{kind:"Argument",name:{kind:"Name",value:"searchTerm"},value:{kind:"Variable",name:{kind:"Name",value:"searchTerm"}}},{kind:"Argument",name:{kind:"Name",value:"onlyGroupLabels"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"includeAncestorGroups"},value:{kind:"BooleanValue",value:!0}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Label"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:308}};a.loc.source={body:'#import "~/graphql_shared/fragments/label.fragment.graphql"\n\nquery groupLabels($fullPath: ID!, $searchTerm: String) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    labels(searchTerm: $searchTerm, onlyGroupLabels: true, includeAncestorGroups: true) {\n      nodes {\n        ...Label\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("NwwH").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.groupLabels=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"groupLabels")},w9Yc:function(e,i){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"TimelogFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Timelog"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timeSpent"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"user"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"spentAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"note"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"body"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"summary"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"userPermissions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"adminTimelog"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:189}};n.loc.source={body:"fragment TimelogFragment on Timelog {\n  __typename\n  id\n  timeSpent\n  user {\n    id\n    name\n  }\n  spentAt\n  note {\n    id\n    body\n  }\n  summary\n  userPermissions {\n    adminTimelog\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.TimelogFragment=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"TimelogFragment")},wMWn:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"subscription",name:{kind:"Name",value:"issuableAssigneesUpdated"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"issuableId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"IssuableID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"issuableAssigneesUpdated"},arguments:[{kind:"Argument",name:{kind:"Name",value:"issuableId"},value:{kind:"Variable",name:{kind:"Name",value:"issuableId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"InlineFragment",typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Issue"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"availability"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:346}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n\nsubscription issuableAssigneesUpdated($issuableId: IssuableID!) {\n  issuableAssigneesUpdated(issuableId: $issuableId) {\n    ... on Issue {\n      id\n      assignees {\n        nodes {\n          ...User\n          status {\n            availability\n          }\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("yXJ/").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issuableAssigneesUpdated=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,l=new Set;for(a.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){l.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"issuableAssigneesUpdated")},wSUX:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicReference"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"reference"},arguments:[{kind:"Argument",name:{kind:"Name",value:"full"},value:{kind:"BooleanValue",value:!0}}],directives:[]}]}}]}}]}}],loc:{start:0,end:178}};n.loc.source={body:"query epicReference($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    issuable: epic(iid: $iid) {\n      id\n      reference(full: true)\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.epicReference=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"epicReference")},y9w6:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"projectIssueMilestoneMutation"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"attributeId"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetAttribute"},name:{kind:"Name",value:"updateIssue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"milestoneId"},value:{kind:"Variable",name:{kind:"Name",value:"attributeId"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attribute"},name:{kind:"Name",value:"milestone"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expired"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:355}};n.loc.source={body:"mutation projectIssueMilestoneMutation($fullPath: ID!, $iid: String!, $attributeId: ID) {\n  issuableSetAttribute: updateIssue(\n    input: { projectPath: $fullPath, iid: $iid, milestoneId: $attributeId }\n  ) {\n    errors\n    issuable: issue {\n      id\n      attribute: milestone {\n        title\n        id\n        state\n        expired\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.projectIssueMilestoneMutation=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"projectIssueMilestoneMutation")}}]);
//# sourceMappingURL=commons-pages.dashboard.milestones.show-pages.groups.merge_requests-pages.groups.milestones.edit-pag-ec91d70f.9b8e8b6f.chunk.js.map